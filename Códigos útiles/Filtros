
library(dplyr)
library(tidyr)
library(writexl)

# Tratamiento = Factor

#############################################
# üîπ 2. FILTRAR TRATAMIENTOS
#############################################

# Filtrar solo algunos tratamientos espec√≠ficos
datos_filtrados <- datos %>%
  filter(Tratamiento %in% c("Azufre 50 kg/ha", "Azufre 100 kg/ha", "Azufre 150 kg/ha"))

# Excluir ciertos tratamientos (por ejemplo, el testigo)
datos_sin_testigo <- datos %>%
  filter(!Tratamiento %in% c("Testigo", "Azufre 200 kg/ha"))

# Filtrar tratamientos con texto en com√∫n (por ejemplo, ‚ÄúAzufre‚Äù y ‚ÄúF√≥sforo‚Äù)
datos_azufre_fosforo <- datos %>%
  filter(grepl("Azufre", Tratamiento) & grepl("F√≥sforo", Tratamiento))

#############################################
#  3. FILTRAR POR VARIOS FACTORES
#############################################

# Si tienes columnas separadas (por ejemplo: Azufre, F√≥sforo, Repetici√≥n)
datos_factores <- datos %>%
  filter(Azufre %in% c(100, 150), Fosforo %in% c(50, 100))

#############################################
# üîπ 4. FILTRAR CON VARIAS CONDICIONES
#############################################

# Ejemplo: solo tratamientos seleccionados con rendimientos > 3000
datos_condiciones <- datos %>%
  filter(Tratamiento %in% c("Azufre 100 kg/ha", "Azufre 150 kg/ha"),
         Rendimiento > 3000)

#############################################
# üîπ 5. EXCLUIR COLUMNAS QUE NO SE USAR√ÅN
#############################################

# Eliminar columnas innecesarias (reemplaza con tus nombres)
datos_limpios <- datos %>%
  select(-c(Observaciones, Fecha, Investigador))

#############################################
# üîπ 6. CREAR TABLAS DE DOBLE ENTRADA
#############################################

# Promedio de una variable seg√∫n Tratamiento y Repetici√≥n
tabla_doble <- datos %>%
  group_by(Tratamiento, Repetici√≥n) %>%
  summarise(Promedio_Rendimiento = mean(Rendimiento, na.rm = TRUE))

# Convertir la tabla a formato ancho (opcional)
tabla_doble_ancha <- tabla_doble %>%
  pivot_wider(names_from = Repetici√≥n, values_from = Promedio_Rendimiento)

#############################################
# üîπ 7. TABLAS POR FACTOR (TRATAMIENTO O REPETICI√ìN)
#############################################

# Por Tratamiento
tabla_tratamiento <- datos %>%
  group_by(Tratamiento) %>%
  summarise(
    Promedio_Rendimiento = mean(Rendimiento, na.rm = TRUE),
    Desviacion = sd(Rendimiento, na.rm = TRUE),
    Maximo = max(Rendimiento, na.rm = TRUE),
    Minimo = min(Rendimiento, na.rm = TRUE)
  )

# Por Repetici√≥n
tabla_repeticion <- datos %>%
  group_by(Repetici√≥n) %>%
  summarise(
    Promedio_Rendimiento = mean(Rendimiento, na.rm = TRUE)
  )

#############################################
# üîπ 8. TABLA GENERAL (VARIAS VARIABLES DE RESPUESTA)
#############################################

# Reemplaza con tus variables reales
tabla_general <- datos %>%
  group_by(Tratamiento) %>%
  summarise(
    Promedio_Rendimiento = mean(Rendimiento, na.rm = TRUE),
    Promedio_Peso_Seco_Hoja = mean(Peso_Seco_Hoja, na.rm = TRUE),
    Promedio_Peso_Seco_Tallo = mean(Peso_Seco_Tallo, na.rm = TRUE)
  )

#############################################
# üîπ 9. EXPORTAR TABLAS A EXCEL
#############################################

write_xlsx(tabla_tratamiento, "Tabla_por_tratamiento.xlsx")
write_xlsx(tabla_doble, "Tabla_doble_entrada.xlsx")
write_xlsx(tabla_general, "Tabla_general.xlsx")

#############################################
# ‚úÖ FIN DEL SCRIPT
#############################################
