rm(list=ls())
pacman::p_load(readxl,lme4,lmerTest, MASS, DHARMa,car,multcomp,hnp,dplyr,tidyr,
               ggplot2,extrafont,gridExtra,ggiraphExtra,tinytex,reshape2,ggpubr, 
               emmeans,lsmeans,multcompView,effects, vegan,tidyverse,knitr,kableExtra, 
               janitor,rpart,reshape,rpart.plot,caTools,fastDummies,caret,pROC,plotly,GGally,
               ggiraphExtra,factoextra,FactoMineR,scales) 

df <- read_excel("Consolidado.xlsx", 
                          sheet = "DataMP") %>% 
  clean_names() %>% 
  filter(!(tratamiento%in%c("T2","T11", "T16","T1"
                            )))



str(df)

df

# 1) Asegura el orden y los niveles de los factores (ajusta si hace falta)
datos <- df %>%
  mutate(
    F3_FI = factor(f3_fi, levels = c("0% N","50%N","70 %N","70% N")), # deja solo los niveles que existan
    F1_Bacterias_PSA = factor(f1_bacterias_psa, levels = c("Con Bacteria","Sin Bacteria")),
    F2_SB = factor(f2_sb, levels = c("Con SB","Sin SB"))
  )


levels(as.factor(df$f3_fi))


# 2) Gráfico de interacción en un solo panel
ggplot(datos,
       aes(x = F3_FI,
           y = tch_rel,
           color = F1_Bacterias_PSA,
           linetype = F2_SB,
           group = interaction(F1_Bacterias_PSA, F2_SB))) +
  stat_summary(fun = mean, geom = "point", position = position_dodge(width = .15), size = 2) +
  stat_summary(fun = mean, geom = "line", position = position_dodge(width = .15)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .1,
               position = position_dodge(width = .15)) +
  labs(x = "FI (N%)",
       y = "TCH relativo",
       color = "Bacterias PSA",
       linetype = "SB",
       title = "Gráfico de interacción: FI × Bacterias × SB") +
  theme_minimal(base_size = 12)



ggplot(
  datos,
  aes(x = F2_SB,
      y = tch_rel,  # <--- cambia por tu variable
      color = F1_Bacterias_PSA,
      group = F1_Bacterias_PSA)
) +
  stat_summary(fun = mean, geom = "point", size = 2,
               position = position_dodge(width = 0.15)) +
  stat_summary(fun = mean, geom = "line",
               position = position_dodge(width = 0.15)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1,
               position = position_dodge(width = 0.15)) +
  facet_wrap(~ F3_FI) +
  labs(x = "FI (N%)", y = "Media de la respuesta", color = "Bacterias PSA",
       title = "Interacción FI × Bacterias PSA (facetado por SB)") +
  theme_minimal(base_size = 12)

#






str(df)




# Si usarás tus datos, reemplaza df por tu data.frame (ej. read_csv("mi_archivo.csv"))
# Asegúrate de convertir a factor: df <- df |> mutate(A=factor(A), B=factor(B), C=factor(C))


# ---- 2) Modelo lineal (ANOVA de 3 vías) ----
# Opción 2.1: Modelo sin bloques
m0 <- lm(tch_t1 ~ f1_bacterias_psa*f2_sb *f3_fi , data = df)

influenceIndexPlot(m0,vars=c('Studentized','Cook','Hat'),id.n=3)



# ---- 4) Medias ajustadas (EMMs) y comparaciones ----
# 4.1) Si la interacción A:B:C ES significativa, interpreta por simples efectos
emm_ABC <- emmeans(m0, ~ f2_sb|f1_bacterias_psa|f3_fi)


cld(emmeans(m0, ~ f2_sb|f1_bacterias_psa|f3_fi),type="response", 
    alpha   = 0.15, Letters = letters, 
    adjust  = "bonferroni", reversed=T) 



# Comparaciones dentro de cada combinación de dos factores
pairwise_ABC <- contrast(emm_ABC, method = "pairwise", by = c("f1_bacterias_psa","f2_sb"))
pairwise_ABC

plot(pairwise_ABC)+
  coord_flip()


# 4.2) Si la interacción triple NO es significativa, baja un nivel
# (ejemplos):
emm_AB <- emmeans(m0, ~ A*B)
contrast(emmm <- emm_AB, interaction = "pairwise")


# 4.3) Comparaciones por factor dentro de niveles de otros
# Ej.: efecto de A dentro de cada B:C
emm_A_in_BC <- emmeans(m0, ~ f2_sb|f1_bacterias_psa*f3_fi)
summary(contrast(emm_A_in_BC, method = "pairwise"), infer = c(TRUE, TRUE), adjust = "tukey")

plot(emm_A_in_BC)+
  coord_flip()

# 4.4) Letras (CLD) por celdas A*B*C
cld_ABC <- multcomp::cld(emm_ABC, Letters = letters, adjust = "tukey")
cld_ABC

plot(cld_ABC)+
  coord_flip()


#-------------------------------------Gráficos---------------------------------------------

emmip(m0, f1_bacterias_psa ~ f2_sb | f3_fi,
      CIs = TRUE) +
  labs(title = "Interacción triple: Bacterias × SB × FI",
       x = "Sustrato Biológico (SB)",
       y = "Media ajustada de TCH_rel",
       color = "Bacterias PSA") +
  theme_minimal(base_size = 12)




# Efecto de SB dentro de cada combinación Bacterias × FI
plot(emm_ABC, comparisons = TRUE) +
  labs(title = "Efecto de SB dentro de cada combinación de Bacterias × FI",
       x = "Sustrato Biológico (SB)",
       y = "Medias ajustadas de TCH_rel") +
  theme_minimal()





cld_ABC <- multcomp::cld(emm_ABC, Letters = letters, adjust = "tukey")

plot(cld_ABC) +
  labs(title = "Comparaciones múltiples (letras de significancia)",
       x = "Tratamientos combinados",
       y = "Media ajustada de TCH_rel") +
  coord_flip() +
  theme_minimal()




# Mapa de calor con colores 

emm_df <- as.data.frame(emm_ABC)

ggplot(emm_df, aes(x = f1_bacterias_psa, y = f2_sb, fill = emmean)) +
  geom_tile(color = "white", size = 0.3) +
  geom_text(aes(label = round(emmean, 2)), color = "black", size = 3.5) +
  scale_fill_gradient2(
    low = "#F44336",      # Rojo intenso → valores bajos
    mid = "#FFEB3B",      # Amarillo vibrante → valores medios
    high = "#4CAF50",     # Verde intenso → valores altos
    midpoint = 0.92       # Punto medio (ajustable según tus datos)
  ) +
  facet_wrap(~ f3_fi) +
  labs(
    title = "Mapa de calor de medias ajustadas (EMMs)",
    x = "Bacterias PSA",
    y = "Sustrato Biológico (SB)",
    fill = "EMM TCH_rel"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )



#Gráfico de interacción

emm_df <- as.data.frame(emmeans(m0, ~ f1_bacterias_psa * f2_sb * f3_fi))

ggplot(emm_df, aes(x = f3_fi, y = emmean, 
                   color = f1_bacterias_psa, 
                   group = f1_bacterias_psa)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  facet_wrap(~ f2_sb) +
  labs(
    title = "Interacción entre Fertilización (FI), Bacterias PSA y Sustrato Biológico (SB)",
    x = "Nivel de Fertilización Inorgánica (FI)",
    y = "TCH relativo (media ajustada)",
    color = "Bacterias PSA"
  ) +
  theme_minimal(base_size = 13) +
  theme(legend.position = "bottom")

#-------------------------------------Contrastes considerando %N eficiente

library(ggplot2)
library(emmeans)

# Calculamos los emmeans para todas las combinaciones
emm <- emmeans(m0, ~ f1_bacterias_psa * f2_sb * f3_fi)
# Definir contrastes personalizados
my_contrasts <- list(
  # Contraste 1: 50%N vs 50%N Efi (Con Bacteria, Con SB)
  "50%N vs 50%N Efi (Con Bacteria, Con SB)" = 
    c("f3_fi=50%N, f1_bacterias_psa=Con Bacteria, f2_sb=Con SB" = 1,
      "f3_fi=50%N Efi, f1_bacterias_psa=Con Bacteria, f2_sb=Con SB" = -1),
  
  # Contraste 2: 70%N vs 70%N Efi (Con Bacteria, Con SB)
  "70%N vs 70%N Efi (Con Bacteria, Con SB)" = 
    c("f3_fi=70%N, f1_bacterias_psa=Con Bacteria, f2_sb=Con SB" = 1,
      "f3_fi=70%N Efi, f1_bacterias_psa=Con Bacteria, f2_sb=Con SB" = -1),
  
  # Contraste 3: 100%N vs 100%N Efi (Sin Bacteria, Sin SB)
  "100%N vs 100%N Efi (Sin Bacteria, Sin SB)" = 
    c("f3_fi=100% N, f1_bacterias_psa=Sin Bacteria, f2_sb=Sin SB" = 1,
      "f3_fi=100% N Efi, f1_bacterias_psa=Sin Bacteria, f2_sb=Sin SB" = -1)
)


# Aplicar contrastes
contrasts_results <- contrast(emm, method = my_contrasts, adjust = "tukey")

# Mostrar resultados
print(contrasts_results)














library(emmeans)

# Obtener emmeans
emm <- emmeans(m0, ~ f1_bacterias_psa * f2_sb * f3_fi)

# 1. Contraste: 50%N vs 50%N Efi (Con Bacteria, Con SB)
emm_50 <- emmeans(m0, ~ f3_fi, 
                  at = list(f1_bacterias_psa = "Con Bacteria",
                            f2_sb = "Con SB",
                            f3_fi = c("50%N", "50%N Efi")))
c1 <- pairs(emm_50)

# 2. Contraste: 70%N vs 70%N Efi (Con Bacteria, Con SB)
emm_70 <- emmeans(m0, ~ f3_fi, 
                  at = list(f1_bacterias_psa = "Con Bacteria",
                            f2_sb = "Con SB",
                            f3_fi = c("70%N", "70%N Efi")))
c2 <- pairs(emm_70)

# 3. Contraste: 100%N vs 100%N Efi (Sin Bacteria, Sin SB)
emm_100 <- emmeans(m0, ~ f3_fi, 
                   at = list(f1_bacterias_psa = "Sin Bacteria",
                             f2_sb = "Sin SB",
                             f3_fi = c("100% N", "100% N Efi")))  # ¡OJO al espacio!
c3 <- pairs(emm_100)

# Combinar todos los contrastes
contrasts_results <- rbind(c1, c2, c3)

# Etiquetar los contrastes
contrast_labels <- c(
  "50%N vs 50%N Efi (Con Bacteria, Con SB)",
  "70%N vs 70%N Efi (Con Bacteria, Con SB)",
  "100%N vs 100%N Efi (Sin Bacteria, Sin SB)"
)
contrasts_results@grid$contrast <- contrast_labels

# Mostrar resultados
summary(contrasts_results, infer = TRUE)

