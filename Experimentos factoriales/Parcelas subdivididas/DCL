#Pegar las librerias antes!!

datos<- read_excel("Psub_DCL (1).xlsx", sheet = 1)
print(head(datos))
attach(datos)
colnames(datos)

FA<- as.factor(Var)
FB<- as.factor(Fos)
FC<- as.factor(Nitro)
fila<- as.factor(Fila)
col<- as.factor(Col)
vr<- as.vector(Forraje)
y<- as.numeric(vr)

datos2<- data.frame(FA,FB,FC,fila,col,y)


interaction.plot(FA,FB,y, col=c("red","blue"), lwd=2, lty=1, trace.label = "Fos", xlab="Var",
                 ylab="Forraje")

interaction.plot(FA,FC,y, col=c("red","blue"), lwd=2, lty=1, trace.label = "Nitro", xlab="Var",
                 ylab="Forraje")

with(datos2, xyplot(y~FA | FB, groups = FC, pch=16, cex=1.4))
with(datos, xyplot(y ~ FA | FB, groups = FC, type="a", lwd=2, col=c("blue", "red")))


# Calcular medias y error estándar (o desviación estándar)

medias <- datos2 %>%      
  group_by(FA) %>%
  summarise(Media = mean(y, na.rm = TRUE), SE = sd(y, na.rm = TRUE) / sqrt(n())) # Error estándar

#Gráfico para comparar las medias por tratamiento:

ggplot(medias, aes(x = FA, y = Media, fill = FA)) +
  geom_bar(stat = "identity", color = "black", width = 0.7) +
  geom_errorbar(aes(ymin = Media - SE, ymax = Media + SE),  # Intervalos de error
                width = 0.2, position = position_dodge(0.9)) +
  labs(title = "Media de var/trat", x = "var", y = "Rend") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas
  scale_fill_manual(values = c("#D9D9D9", "#FF9999", "lightblue", "lightpink")) 


#ANDEVA
  # Yijklm = u + Ti + Fj + Ck + Pl + Zm (TFC)ijk + Sjkl(i) + (Tp)il + (TZ)im + (PZ)lm + (TPZ)ilm + Eijklm 

andeva<- aov(y~FA+FB+FC+FA:FB+FA:FC+FB:FC+FA:FB:FC+fila+col+Error(interaction(fila,col)/FB))
summary(andeva)
andeva1<- aov(y~fila+col+FA*FB*FC+Error(interaction(fila,col)/FB)) #Ambas formas son equivalentes
summary(andeva1)

#Verificación de los supuestos: ANDEVA con un error
andeva2<- aov(y~FA*FB*FC+fila+col+interaction(fila, col)/FB)
summary(andeva2)
sw<- shapiro.test(andeva2$residuals)
print(sw)
check_normality(andeva2)
qqPlot(andeva2$residuals, col="red", pch=16)
plot(andeva2,2)

#Homocedasticidad
leveneTest(andeva2$residuals, FA, center="mean")
leveneTest(andeva2$residuals, FB, center="mean")
leveneTest(andeva2$residuals, FC, center="mean")
leveneTest(andeva2$residuals, FA:FB, center="mean")
leveneTest(andeva2$residuals, FA:FC, center="mean")
leveneTest(andeva2$residuals, FB:FC, center="mean")
leveneTest(andeva2$residuals, FA:FB:FC, center="mean")

bartlett.test(andeva2$residuals, FA)
bartlett.test(andeva2$residuals, FB)
bartlett.test(andeva2$residuals, FC)
bartlett.test(andeva2$residuals, FA:FB)
bartlett.test(andeva2$residuals, FA:FC)
bartlett.test(andeva2$residuals, FB:FC)
bartlett.test(andeva2$residuals, FA:FB:FC)

check_heteroscedasticity(andeva2)
plot(andeva2$fitted.values, andeva2$residuals, col="blue", pch=16,
     abline(h=0, col="red", lwd=3, lty=3))

plot(andeva2,1)

par(mar=c(2,4,5,6))
plot(andeva2)
check_model(andeva2)
win.graph(11,11)
check_normality(andeva2) #dar click varias veces en la ventana gráfica para que aparezcan todos los graficos

#Independencia
dwtest(andeva2)


#PMM:
sk<- SK(andeva, which="FA", sig.level = 0.05, dispersion="se")
summary(sk)
sk2<- SK(andeva, which="FB", sig.level = 0.05, dispersion="se")
summary(sk2)
sk3<- SK(andeva, which="FC", sig.level = 0.05, dispersion="se")
summary(sk3)


datos2$FA_FB<- interaction(FA,FB, sep="_")
datos2$FA_FC<- interaction(FA,FC,sep = "_")
datos2$FB_FC<- interaction(FB,FC, sep = "_")
datos2$FA_FB_FC<- interaction(FA,FB,FC,sep = "_")
attach(datos2)
sk4<- SK(andeva, which="FA_FB", sig.level = 0.05, dispersion="se")
summary(sk4)
sk5<- SK(andeva, which="FA_FC", sig.level = 0.05, dispersion="se")
summary(sk5)
sk6<- SK(andeva, which="FB_FC", sig.level = 0.05, dispersion="se")
summary(sk6)
sk7<- SK(andeva, which="FA_FB_FC", sig.level = 0.05, dispersion="se")
summary(sk7)

tukey<- HSD.test(y, FA, DFerror = 6, MSerror = 0.0808, console = T)
print(tukey)
tukey1<- HSD.test(y, FB, DFerror = 12, MSerror = 0.00479, console = T)
print(tukey1)
tukey2<- HSD.test(y, FC, DFerror = 48, MSerror = 0.0065, console = T)
print(tukey2)


graphics.off()
cat("\014")
rm(list=ls())
