if(!require(car)){install.packages("car")}
if(!require(lattice)){install.packages("lattice")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(performance)){install.packages("performance")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(agricolae)){install.packages("agricolae")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(readxl)){install.packages("readxl")}
library(car)
library(lattice)
library(tidyverse)
library(performance)
library(rstatix)
library(agricolae)
library(ggpubr)
library(readxl)
install.packages("doebioresearch")
library(doebioresearch)
library(dplyr)
library(ScottKnott)

datos<-read_excel("Parsubdiv.xlsx")
attach(datos)
head(datos)
view(datos)
names(datos)
datos$Blo<-as.factor(datos$Blo)
datos$Lab<-as.factor(datos$Lab)
datos$Var<-as.factor(datos$Var)
datos$Fer<-as.factor(datos$Fer)


#ANDEVA------------------------------------------------------------------
names(datos)
model<-with(datos,ssp.plot(Blo,Lab,Var,Fer,Rendimiento))

#ANDEVA con fx AOV
names(datos)
model1<-aov(Rendimiento~Blo+Lab*Var*Fer + Error(Blo/Lab/Var), datos)
model1
summary(model1)

#PMM (Tuckey) para cada factor individual-----------------------

gla<-model$gl.a
glb<-model$gl.b
glc<-model$gl.c
Ea<-model$Ea
Eb<-model$Eb
Ec<-model$Ec
names(datos)

s1<-with(datos,LSD.test(Rendimiento,Lab,gla,Ea,console=T))
s2<-with(datos,LSD.test(Rendimiento,Var,glb,Eb,console=T))
s3<-with(datos,LSD.test(Rendimiento,Fer,glc,Ec,console=T))
plot(s1,xlab="Métodos de labranza",las=1,variation = "IQR")                              
plot(s2,xlab="Variedades de maíz", variation = "IQR")
plot(s3,xlab="Tipos de fertilizante", variation = "IQR")

#Verificación de los supuestos---------------------------------------------
#Homogeneidad de vaianzas
names(datos)
datos %>% levene_test(Rendimiento~ Lab*Var*Fer)
bartlett.test(Rendimiento~interaction(Lab,Var,Fer), datos) #Prueba de Barlett
leveneTest( Rendimiento ~ Lab*Var*Fer, datos) #Prueba de Levene 

#---------------------------------------------------------------------------------------------------------------------------------------------------------

datos<- read_excel("trigo_Psub_DCA (1).xlsx", sheet = 1)
print(head(datos))
attach(datos)
colnames(datos)

FA<- as.factor(Fecha)
FB<- as.factor(Var)
FC<- as.factor(Den)
bloq<- as.factor(Rep)
vr<- as.vector(Rend)
y<- as.numeric(vr)

datos2<- data.frame(FA,FB,FC,bloq,y)
attach(datos2)

interaction.plot(FA,FB,y, col= c("red","blue"), lty=1, lwd=2, 
                 trace.label = "Var", xlab="Fecha", ylab="Rend",
                 cex=0.4, main="Gráfico de interacción")

interaction.plot(FA,FC,y, col= c("red","black"), lty=1, lwd=2, 
                 trace.label = "Var", xlab="Fecha", ylab="Rend",
                 cex=0.4, main="Gráfico de interacción")


with(datos, xyplot(y ~ FA | FB, groups = FC, pch = 21, cex=1.2))
with(datos, xyplot(y ~ FA | FB, groups = FC, type="a", lwd=2, col=c("blue", "red"))) #en type se puede poner "o"




# Calcular medias y error estándar (o desviación estándar)

medias <- datos2 %>%      
  group_by(FA) %>%
  summarise(Media = mean(y, na.rm = TRUE), SE = sd(y, na.rm = TRUE) / sqrt(n())) # Error estándar

#Gráfico para comparar las medias por tratamiento:

ggplot(medias, aes(x = FA, y = Media, fill = FA)) +
  geom_bar(stat = "identity", color = "black", width = 0.7) +
  geom_errorbar(aes(ymin = Media - SE, ymax = Media + SE),  # Intervalos de error
  width = 0.2, position = position_dodge(0.9)) +
  labs(title = "Media de var/trat", x = "var", y = "Rend") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas
  scale_fill_manual(values = c("#D9D9D9", "#FF9999")) 



#ANDEVA
  # Yijkl = u + Ti + Bj + pk + Ml + (TB)ij + (y)jk(i) + (Tp)ik + (TM)il + (pM)kl + Eijkl

andeva<- aov(y~bloq+FA+FB+FC+FA:FB+FA:FC+FB:FC+FA:FB:FC+Error(bloq/FA/FB))
summary(andeva)
andeva1<- aov(y~bloq+FA*FB*FC+Error(bloq/FA/FB)) #ambas formas son equivalentes
summary(andeva1)
model.tables(andeva, type = "means")

#Verificación de los supuestos: obtener ANDEVA con 1 error
andeva2<- aov(y~bloq+FA*FB*FC+bloq/FA/FB)
summary(andeva2)

#Normalidad:
sw<- shapiro.test(andeva2$residuals)
print(sw)
check_normality(andeva2)
plot(andeva2,2)
qqPlot(andeva2$residuals, col = "red", pch=16, cex = 1.2)

#Homocedasticidad:
leveneTest(andeva2$residuals, FA, center = "mean")
leveneTest(andeva2$residuals, FB, center = "mean")
leveneTest(andeva2$residuals, FC, center = "mean")
leveneTest(andeva2$residuals, FA:FB, center = "mean")
leveneTest(andeva2$residuals, FA:FC, center = "mean")
leveneTest(andeva2$residuals, FB:FC, center = "mean")
leveneTest(andeva2$residuals, FA:FB:FC, center = "mean")

bartlett.test(andeva2$residuals~FA)
bartlett.test(andeva2$residuals~FB)
bartlett.test(andeva2$residuals~interaction(FA,FB))
bartlett.test(andeva2$residuals~interaction(FA,FC))
bartlett.test(andeva2$residuals~interaction(FB,FC))              
bartlett.test(andeva2$residuals~interaction(FA,FB,FC))

check_heteroscedasticity(andeva2)

#Independencia
dwtest(andeva2)

#PMM:
sk<- SK(andeva, which="FA", sig.level = 0.05, dispersion="se")
summary(sk)
sk2<- SK(andeva, which="FB", sig.level = 0.05, dispersion="se")
summary(sk2)
sk3<- SK(andeva, which="FC", sig.level = 0.05, dispersion="se")
summary(sk3)

attach(datos)
datos$FA_FB<- interaction(FA,FB,sep="_")
sk4<- SK(andeva, which="FA_FB", sig.level = 0.05, dispersion="se")
summary(sk4)

datos$FA_FC<- interaction(FA,FC,sep="_")
sk5<- SK(andeva, which="FA_FC", sig.level = 0.05, dispersion="se")
summary(sk5)

datos$FB_FC<- interaction(FB,FC,sep="_")
sk6<- SK(andeva, which="FB_FC", sig.level = 0.05, dispersion="se")
summary(sk6)

datos$FA_FB_FC<- interaction(FA,FB,FC,sep="_")
sk7<- SK(andeva, which="FA_FB", sig.level = 0.05, dispersion="se")
summary(sk7)

tukey<- HSD.test(y, FA, DFerror = 6, MSerror = 0.56, console = T)
tukey<- HSD.test(y, FB, DFerror = 6, MSerror = 0.018, console = T)
tukey<- HSD.test(y, FC, DFerror = 12, MSerror = 0.06, console = T)
tukey<- HSD.test(y, FA:FB, DFerror = 6, MSerror = 0.018, console = T)
tukey<- HSD.test(y, FA:FC, DFerror = 12, MSerror = 0.06, console = T)
tukey<- HSD.test(y, FB:FC, DFerror = 12, MSerror = 0.06, console = T)
tukey<- HSD.test(y, FA:FB:FC, DFerror = 12, MSerror = 0.06, console = T)

graphics.off()
cat("\014")
rm(list=ls())
