install.packages("mice")
install.packages("corrplot")
install.packages("GGally")
install.packages('lsmeans')
library(GGally)
library(mice) #para realizar imputación múltiple
library(corrplot)
library(readxl)
library(doebioresearch)
library(performance)
library(dplyr)
library(ScottKnott)
library(agricolae)
library(car)
library(broom)
library(data.table)        
library(emmeans)
library(ggplot2)
library(tidyverse)
library(lattice)
library(nlme)
library(lme4)
library(lmerTest)
library(multcomp)
library(rstatix)
library(ggpubr)
library(see)
library(MASS)
library(lsmeans)

datos<- read_excel("LABORATORIO DE FERTI CÁLCULOS.xlsx")
setwd("C:/Users/LUIS/Desktop/USAC 2/9no. semestre/MIAPA/Base de datos")
attach(datos)
str(datos)
head(datos)
tail(datos)
view(datos)

#ANDEVA

#Definición del modelo y análisis de la varianza

Alim<- factor(Alimento)
#Se crea un vector de datos Pesoi con la columna Peso.in (covariable):
Pesoi<-as.vector(Peso.in)
Pesi<-as.numeric(Pesoi)

pesf<-as.vector(Peso.fin)
pes1<-as.numeric(pesf)

#Suposiciones del ANCOVA
#1. Igualdad de pendientes: el coef angular para cada grupo de tratam debe ser el mismo
  #La interacción no es significativa, probar la igualdad de pendientes, o sea, que la covariable está asociada con la variable de respuesta de la misma manera entre los grupos (tratamientos).

#Análisis de Covarianza
result1 <- aov(pes1~Alim*Pesi,data = ANC1)
result2<- aov(pes1~Alim+Pesi,data = ANC1)
print(anova(result1,result2))

  #En caso no se obtenga un resultado significativo, la relación es lineal (se cumple el supuesto 1)

#Otra forma para obtener Análisis de Covarianza:

result3 <- aov(pes1~Alim+Pesi+Alim:Pesi,data = ANC1)
summary(result3)


#2. Linealidad de pendientes.
#Se observa las pendientes o las líneas de tendencia entre los grupos. Deberán verse más o menos iguales.

plot(Pesi, pes1, col = Alim, xlab = "Peso inicial", ylab = "Peso final")

#3. Igualdad de los grupos respecto a la covariable.
#Realizar un ANOVA con la covariable y los tratamientos. No deberá encontrarse diferencias significativas

COV3<-aov(Pesi~Alim,data=ANC1)
summary(COV3)

#4. Homogeneidad de varianzas
leveneTest(pes1 ~ Alim, center = mean, data = ANC1) 


#Análisis de covarianza usando la función modelo lineal (lm) Linear mode
modCOV<-lm(pes1~Alim+Pesi,data=ANC1)
Anova(modCOV, type="III")

#Coeficiente de variación
cv.model(modCOV) 

#Media general de la variable de respuesta
mean(ANC1[,3]) 
sumRes<-summary(modCOV)
print(sumRes)
#Observe la estimación para peso inicial, es el coeficiente angular de la regresión (beta estimado)

#5. Normalidad de los residuos

shapiro.test(modCOV$res)
plot(modCOV)

#Pruebas de comparación múltiple de medias
#Como la covariable tiene un efecto significativo, es necesario ajustar las medias, se instala la biblioteca: “lsmeans” (Least-squares means)


#Ajuste de medias

lsmeans(modCOV,~Alim)

#Comparaciones dos a dos con las medias corregidas:
  
  medias.lsm <- lsmeans(modCOV, pairwise ~ Alim, glhargs=list());medias.lsm
#----------------------------------------------------------------------------------------------------------------------------------------------
#Otra forma:
# Pegar librerias

datos<- read_excel("covarianza.xlsx", sheet=1)
view(datos)
attach(datos)
print(head(datos))

FA<- as.factor(Tratamientos)
bloq<- as.factor(Bloques)
vr<- as.vector(Y)
y<- as.numeric(vr)
x1<- as.vector(X)
x<- as.numeric(x1)

datos2<- data.frame(FA, bloq, y, x)
attach(datos2)
n_FA<- nlevels(FA);n_FA

boxplot(y~FA, col="lightgray", border="black", xlab="Trat", ylab="Y")


# Calcular medias y error estándar (o desviación estándar)

medias <- datos2 %>%      
  group_by(FA) %>%
  summarise(Media = mean(y, na.rm = TRUE), SE = sd(y, na.rm = TRUE) / sqrt(n())) # Error estándar

print(medias)

#Gráfico para comparar las medias por tratamiento:

ggplot(medias, aes(x = FA, y = Media, fill = FA)) +
  geom_bar(stat = "identity", color = "black", width = 0.7) +
  geom_errorbar(aes(ymin = Media - SE, ymax = Media + SE),  # Intervalos de error
                width = 0.2, position = position_dodge(0.9)) +
  labs(title = "Media de var/trat", x = "var", y = "Rend") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar etiquetas
  scale_fill_manual(name = "Trat", values = c("#D9D9D9", 
                                              "#FF9999", 
                                              "lightblue", 
                                              "lightgreen", 
                                              "black", 
                                              "red", 
                                              "#FFD700", 
                                              "#FF7F50", 
                                              "#8A2BE2", 
                                              "#00CED1", 
                                              "#32CD32", 
                                              "#FF69B4"))

#ANCOVA: diseño completamente al azar (DCA)
# Yij = u + Ti + B(xij-Xm) + Eij

#Supuestos del ANCOVA:

# Homogeneidad de pendientes de regresión (B) entre X e Y para cada trat
# Ho: las pendientes son iguales entre cada trat
# Ha: las pendientes son distintas entre cada trat

# Relación lineal entre X e Y (linealidad)
# Diagrama de dispersión entre X e Y

# Independencia entre FA y X (debe cumplirse la Ho para verificar independencia)
# Ho: Ti = T
# Ha: Ti distinto de T

# Independencia de los residuos
# Homocedasticidad de los res
# Normalidad

ancova<- aov(y~FA+x) #Modelo sin la interacción
summary(ancova)
cv.model(ancova) # %CV



ancova2<- aov(y~FA*x) #Modelo con interaccion para verificar el cumplimiento de la homogeneidad de pendientes
summary(ancova2)
print(anova(ancova, ancova2)) # Para comparar los modelos y verificar el cumplimiento del supuesto de HP

ancova3<- aov(y~FA+x+FA:x) # Otra forma de verificar el supuesto de HP
summary(ancova3)
# En un grafico de dispersión las líneas de cada tratamiento deben ser paralelas


#Verificar supuesto de linealidad de pendientes
plot(x, y, col = FA, pch=16, cex=1.3, xlab="Covariable", ylab = "VR")


# Gráfico de dispersión con líneas de regresión por tratamiento

ggplot(datos2, aes(x = x, y = y, color = FA)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "covariable", 
       y = "variable de respuesta", title = "Relación entre x e y")

# Análisis de correlación por tratamiento
correlaciones<- datos2 %>%
  group_by(FA) %>%
  summarise(correlacion = cor(x, y, method = "pearson"),
            p_valor = cor.test(x, y, method = "pearson")$p.value)

print(correlaciones)


#Gráfico para verificar que los puntos se ajusten a líneas curvas (en ese caso, no hay linealidad)
ggplot(datos2, aes(x = x, y = y, color = FA)) +
  geom_point() +
  geom_smooth(method = "loess", se = FALSE) +
  labs(x = "cov", y = "Resp", title = "Relación no lineal entre X e Y")


# ANCOVA CON lm y cálculo del coeficiente angular de regresión (B)

ancova5<- lm(y~FA+x) # Otra forma de realizar el ANCOVA
Anova(ancova5, type = "III")

sumRes<- summary(ancova5)
print(sumRes)

# Media general de la VR
mean(datos2[,3])
mean(y) # Otra forma

# Normalidad:
shapiro.test(ancova$residuals)
check_normality(ancova)
qqPlot(ancova$residuals, col="red", pch=16, cex=1.3)
plot(ancova,2)

# Homocedasticidad
leveneTest(y~FA, center = "mean")
check_heteroscedasticity(ancova)
plot(ancova$fitted.values, ancova$residuals, col = "red", pch = 16, cex = 1.3,
     xlab="predichos", ylab="residuos", abline(h=0, col="black", lwd= 2))

# Independencia
dwtest(ancova)



# PMM:
lsmeans(ancova,~FA) # Medias de Y ajustadas por el efecto de la covariable x

medias_ajustadas <- emmeans(ancova, ~ FA); print(medias_ajustadas) #Otra forma de hacerlo


  # Hacer las comparaciones o contrastes de dos en dos (pares)
tukey<- lsmeans(ancova, pairwise~FA, glhargs=list());tukey
duncan<- lsmeans(ancova, pairwise~FA, glhargs=list("duncan"));duncan

tukey1<- pairs(medias_ajustadas, adjust = "tukey") #otra forma (con emmeans)
summary(tukey1)


#Prueba de Scott-Knott
sk<- SK(ancova, which = "FA", dispersion = "se", sig.level = 0.05)
summary(sk)

tukey1<- HSD.test(ancova, "FA", console = T)

#Prueba de Tukey original
tukey_cld <- cld(medias_ajustadas, adjust = "sidak", Letters = letters)
print(tukey_cld)


#Gráfico de barras con medias ajustadas:
medias_aj<- as.data.frame(summary(medias_ajustadas))

ggplot(medias_aj, aes(x = FA, y = emmean, fill = FA)) +
  geom_bar(stat = "identity") +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.4) +
  labs(x = "Tratamiento (FA)", y = "Media ajustada de Y", 
       title = "Medias ajustadas por nivel de FA",
       fill="Trat") +
  theme_minimal() +
  theme(legend.position = "right") 


graphics.off()
rm(list=ls())
cat("\14")
